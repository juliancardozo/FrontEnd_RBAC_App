/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dbseguridad.PostgresDBConnection;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Usuario
 */
public class AuditView extends javax.swing.JFrame {
    PostgresDBConnection conect = new PostgresDBConnection();
    Connection connection = conect.connectToDatabase();
    //Operations
    /**
     * Creates new form AuditView
     */
    public AuditView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("User");
        jLabel1.setName("lblUser"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Password");
        jLabel2.setName("lblPassword"); // NOI18N

        jTextField1.setName("txtUser"); // NOI18N

        jTextField2.setName("txtPassword"); // NOI18N

        jButton1.setText("Login");
        jButton1.setName("btnLogin"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("tablePermissions"); // NOI18N
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleName("tablePermissions");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setName("tableRoles"); // NOI18N
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setName("lblFeedback"); // NOI18N

        jLabel4.setText("Roles");

        jLabel5.setText("Permissions");

        jButton2.setText("Logout");
        jButton2.setName("btnLogout"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setName("lblFeedback"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(7, 7, 7))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jLabel3.getAccessibleContext().setAccessibleName("lblFeedback");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //Limpio el mensaje de feedback
        this.jLabel3.setText("");
        this.jButton2.setEnabled(true);
        
        PreparedStatement stmtLogin;
        PreparedStatement stmtLoginExistUser;
        PreparedStatement stmtUserRole;
        PreparedStatement stmtUserRole2;
        PreparedStatement stmtRolePermission;
        //Hay que hacer el login y devolver el userID
        String user = this.jTextField1 .getText();
        String pass = this.jTextField2.getText();
        String queryLogin = "SELECT user_account_id "
                + "FROM User_Account "
                + "WHERE user_account_name = ? "
                + "AND user_account_password = ?;";
        String queryLoginExistUser = "SELECT user_account_id "
                + "FROM User_Account "
                + "WHERE user_account_name = ? ";
                
                boolean existeUser = false;
       
                if(user.isEmpty()){
                    this.jLabel3.setForeground(Color.red);
                    this.jLabel3.setText("Debe ingresar un usuario.");
                    return;
                }
                if(pass.isEmpty()){
                    this.jLabel3.setForeground(Color.red);
                    this.jLabel3.setText("Debe ingresar una password.");
                    return;
                }
                try {
                //IF EXIST
                Integer userID = -1;
                stmtLoginExistUser = connection.prepareStatement(queryLoginExistUser);
                stmtLoginExistUser.setString(1, user);      
                ResultSet rsLoginExistUser = stmtLoginExistUser.executeQuery();
                rsLoginExistUser.next();
                userID = rsLoginExistUser.getInt("user_account_id");
                stmtLoginExistUser.close();
               
                existeUser = (userID>-1);
                if(existeUser){
                    //TODO
                }
                //YES EXIST CONTINUE 
                
                stmtLogin = connection.prepareStatement(queryLogin);
                stmtLogin.setString(1, user);
                stmtLogin.setString(2, pass);
                
                //Consulto por usuario y password.
                ResultSet rsLogin = stmtLogin.executeQuery();
                rsLogin.next();
                userID = rsLogin.getInt("user_account_id");
                stmtLogin.close();
                boolean encontroElUsuarioBuscado = true;
                encontroElUsuarioBuscado = (userID>-1);
                if(encontroElUsuarioBuscado){
                    //POR MEDIO DEL USER ID SELECCIONAR DE LA TABLA USER_ROLE
                    String queryUserRole = "SELECT (select user_account_name from user_account where user_account_id = user_account_id limit 1), (select role_name from role where role_id = role_id limit 1) FROM user_role WHERE user_account_id = ?";
                    String queryUserRole2 = "SELECT user_account_id, role_id FROM user_role WHERE user_account_id = ? ;";
                    //String queryUserRole2 = "SELECT (select user_account_name from user_account where user_account_id = user_account_id limit 1) as userName, (select role_name from role where role_id = role_id limit 1) as roleName FROM user_role WHERE user_account_id = ?";
                    stmtUserRole = connection.prepareStatement(queryUserRole);
                    stmtUserRole.setInt(1, userID);
                    stmtUserRole2 = connection.prepareStatement(queryUserRole2);
                    stmtUserRole2.setInt(1, userID);
                    ResultSet rsUserRole = stmtUserRole.executeQuery();
                    ResultSet rsUserRole2 = stmtUserRole2.executeQuery();
                    jTable2.setModel(DbUtils.resultSetToTableModel(rsUserRole));
                    stmtUserRole.close();
                    
                    Integer idRole;
                    if(rsUserRole2.next()){
                        idRole = rsUserRole2.getInt("role_id");
                        //Por cada role despliego los permisos
                        String queryRolePermission = "SELECT (select role_name from role where role_id = role_id limit 1), permission_description FROM role_permission rp INNER JOIN permission p ON rp.permission_id = p.permission_id WHERE role_id = ?;";
                        stmtRolePermission = connection.prepareStatement(queryRolePermission);
                        stmtRolePermission.setInt(1, idRole);
                        ResultSet rsRolePermission = stmtRolePermission.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rsRolePermission));
                        stmtRolePermission.close();

                    }
                    this.jLabel3.setText("Login succes! Hi! " + user + ".");
                    this.jLabel3.setForeground(Color.green);
                    this.jLabel6.setText("Aplicacion 1");

                    stmtUserRole2.close();                    
                } else {
                    this.jLabel3.setText("The user not exist in our database. User: " + user);
                    this.jLabel3.setForeground(Color.red);
                }
            } catch (SQLException sqle) {
                if (existeUser){
                    this.jLabel3.setForeground(Color.red);
                    this.jLabel3.setText("Please validate the user password. ");
                } else {
                    this.jLabel3.setForeground(Color.red);
                    this.jLabel3.setText("The user not exist in our database. ");
                }
               
                System.out.println("Error en la ejecución: "
                    + sqle.getErrorCode() + " " + sqle.getMessage());
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.jTextField1.setText("");
        this.jTextField2.setText("");
        DefaultTableModel modelRoles = (DefaultTableModel) this.jTable1.getModel();
        modelRoles.setRowCount(0);
        
        DefaultTableModel modelPermisos = (DefaultTableModel) this.jTable2.getModel();
        modelPermisos.setRowCount(0);
        
        this.jButton2.setEnabled(false);
        this.jButton1.setEnabled(true);
        this.jLabel3.setText("");
        this.jLabel6.setText("");


    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuditView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

   
}
